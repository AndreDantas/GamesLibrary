using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro;
using UnityEngine.UI;
using Sirenix.OdinInspector;

public class PiecePositionEvaluation
{
    [ShowInInspector]
    public static double[,] PawnEvalWhite
    {
        get
        {
            return new double[10, 10]
        {
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,0f,0f},
        {7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f},
        {6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f},
        {5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f},
        {1.0f, 1.0f, 2.0f, 3.0f, 4.0f, 4.0f, 3.0f, 1.0f, 1.0f, 1.0f},
        {0.5f, 0.5f, 1.0f, 2.5f, 3.5f, 3.5f, 2.5f, 0.5f, 0.5f, 0.5f},
        {0.0f, 0.0f, 0.0f, 2.0f, 3.0f, 3.0f, 2.0f, 0.0f, 0.0f, 0.0f},
        {0.5f, -0.5f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, -1.0f,-0.5f,0.5f},
        {0.5f, 1.0f, 1.0f, -2.0f, -3.0f, -3.0f, -2.0f, 1.0f, 1.0f, 0.5f},
        {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f}
                }.Reverse();

        }
    }
    [ShowInInspector]
    public static double[,] PawnEvalBlack { get { return PawnEvalWhite.Reverse(); } }
    [ShowInInspector]
    public static double[,] KnightEval
    {
        get
        {
            return new double[10, 10]{
        {-7.0,-6.0, -5.0, -4.0, -4.0, -4.0, -4.0, -5.0, -6.0,-7.0},
        {-6.0,-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0,-6.0},
        {-5.0,-4.0, -2.0,  0.0,  0.0,  0.0,  0.0, -2.0, -4.0,-5.0},
        {-4.0,-3.0,  0.0,  1.0,  1.5,  1.5,  1.0,  0.0, -3.0,-4.0},
        {-4.0,-3.0,  0.5,  1.5,  2.0,  2.0,  1.5,  0.5, -3.0,-4.0},
        {-4.0,-3.0,  0.0,  1.5,  2.0,  2.0,  1.5,  0.0, -3.0,-4.0},
        {-4.0,-3.0,  0.5,  1.0,  1.5,  1.5,  1.0,  0.5, -3.0,-4.0},
        {-5.0,-4.0, -2.0,  0.0,  0.5,  0.5,  0.0, -2.0, -4.0,-5.0},
        {-6.0,-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0,-6.0},
        {-7.0,-6.0, -5.0, -4.0, -4.0, -4.0, -4.0, -5.0, -6.0,-7.0}
    }.Reverse();
        }
    }
    [ShowInInspector]
    public static double[,] BishopEvalWhite
    {
        get
        {
            return new double[8, 8]
                {
            {-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0},
            { -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0},
            { -1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0},
            { -1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0},
            { -1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0},
            { -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0},
            { -1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0},
            { -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0}
        }.Reverse();
        }
    }
    [ShowInInspector]
    public static double[,] BishopEvalBlack { get { return BishopEvalWhite.Reverse(); } }
    [ShowInInspector]
    public static double[,] RookEvalWhite
    {
        get
        {
            return new double[10, 10]
                {
            {  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0, 0.0},
            {  0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, 1.0,1.0,0.5},
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,0.0,-0.5},
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,0.0,-0.5},
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,0.0,-0.5},
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,0.0,-0.5},
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,0.0,-0.5},
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,0.0,-0.5},
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,0.0,-0.5},
            {  0.0,   0.0, 0.0,  0.5,  0.5,  0.0,  0.0,  0.0,0.0 ,0.0}
                }.Reverse();
        }
    }
    [ShowInInspector]
    public static double[,] RookEvalBlack { get { return RookEvalWhite.Reverse(); } }
    [ShowInInspector]
    public static double[,] QueenEval
    {
        get
        {
            return new double[10, 10]
                {
            {-4.0,-3.0, -2.0, -2.0, -1.0, -1.0, -2.0, -2.0, -3.0, -4.0},
            {-3.0,-2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0, -3.0},
            {-2.0, -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0, -2.0},
            {-2.0, -1.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0, -2.0},
            {-1.0, -0.5,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5, -1.0},
            {-1.0,  0.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5, -1.0},
            {-2.0, -1.0,  0.5,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0,-2.0},
            {-2.0, -1.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0, -1.0,-2.0},
            {-3.0, -2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0,-3.0},
            {-4.0,-3.0, -2.0, -2.0, -1.0, -1.0, -2.0, -2.0, -3.0,-4.0}
        }.Reverse();
        }
    }
    [ShowInInspector]
    public static double[,] KingEvalWhite
    {
        get
        {
            return new double[10, 10]
                {

            { -3.0,-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0, -3.0},
            { -3.0,-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0, -3.0},
            { -3.0, -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0, -3.0},
            { -3.0, -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0, -3.0},
            { -3.0, -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0, -3.0},
            { -2.0, -2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0, -3.0},
            {  -1.0,-1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -1.0},
            {  -1.0,-1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -1.0},
            { 2.0,  2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0, 2.0 },
            {  2.0, 2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0 , 2.0}
        }.Reverse();
        }
    }
    [ShowInInspector]
    public static double[,] KingEvalBlack { get { return KingEvalWhite.Reverse(); } }
}
